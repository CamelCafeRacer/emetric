%% -*- mode: erlang -*-
%% example config
%% order of config parsing:
%% - /etc/emetric
%% - ~/.emetric
%% - -f | --config=file

%% the node to connect to.
%%
%% NOTE: you should NOT specify node or cookie in the config file, it
%% will overwrite what was set in the sli
{node, "ejabberd@localhost"}.
{cookie, "monster"}.

%% list of comma separated stat gathering modules
{gather, "sys,mnesia,ejd,pid"}.

%% list of output modules
{scatter, "flat,pid,stanza"}.

%% comma separated list of modules excluding core, gather, scatter
{mods, "emetric_filter_csv"}.


%% configuration for the emetric_stats_pid, e.g. pid up in gather
%% section.
%%
%% top gather the top X stats 
%%
%% info_key: list of atoms, see erlang:process_info/2 NOTE that if you
%% use an atom that returns something other than {Key, Integer} this
%% will not work
%%
%% max_count: maximum number of pids to log info about
{gather_pid,
 [{top,
   [{info_key, [memory, message_queue_len, reductions, total_heap_size]},
    {max_count, 20}]
  }]
 }.

%% This is a flat style output. It expects each tick to generate a
%% clean row of data. The columns also MUST be consistent, e.g. sys
%%
%% out_dir: directory to store the generated files in
%%
%% base_name: 
{log_flat,
 [{out_dir, "/opt/voalte/data/emetric"},
  {base_name, "emetric-"},
  {filter, emetric_filter_csv}
 ]}.


{log_pid,
 [{out_dir, "/opt/voalte/data/emetric/"},
  {base_name, "pid-"},
  {rate, 2}
  ]}.

{log_stanza,
 [{out_dir, "/opt/voalte/data/emetric/"},
  {base_name, "stanza"},
  {rate, 1}
  ]}.
